on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    # virtual machine
    runs-on: ubuntu-latest
    # Docker container
    container: 
      image: "maven:3.6.3-jdk-8"
      env:
        MAVEN_OPTS: "-Xmx2g -XX:ReservedCodeCacheSize=1g"
    steps:
    # Checkout the repository at tag v* (github ref)
    - name: Checkout repository
      uses: actions/checkout@v2
    # Build Spark
    - name: Build Spark
      run: |
        cd ./axs-spark
        ./dev/make-distribution.sh --name axs-spark --tgz -Phive -Phive-thriftserver -Pmesos -Pyarn -Pkubernetes -DskipTests
        mkdir -p /export
        mv *.tgz /export/axs-spark.tgz
    # Create the Github Release
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: "AXS Spark release ${{ github.ref }}"
        draft: true
        prerelease: false
    # Add jar to release
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: /export/axs-spark.tgz
        asset_name: axs-spark.tgz
        asset_content_type: application/zip
